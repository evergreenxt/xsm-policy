#
# Copyright (c) 2017 Samana Group LLC
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#

# <summary>Stub Domain for vTPM communication with vTPM Admin domain</summary>

########################################
## <summary>
##	Allow the specified type to map write vtpmdomu grants.
## </summary>
## <param name="type">
##	<summary>
##	Type of the domain allowed access.
##	</summary>
## </param>
#
interface(`vtpmdomu_map_write_grant',`
	gen_require(`
		type vtpmdomu_t;
	')

	allow $1 vtpmdomu_t:grant map_write;
')
########################################
## <summary>
##      Allow the specified domain to
##      create a private event type
##      for use with vtpmdomu.
## </summary>
## <param name="dst_type">
##      <summary>
##      Type of the destination domain.
##      </summary>
## </param>
## <param name="event_type">
##      <summary>
##      Type of the event vtpmdomu will create.
##      </summary>
## </param>
#
interface(`vtpmdomu_event_dst',`
        gen_require(`
                type vtpmdomu_t;
        ')

        create_channel($1, vtpmdomu_t, $2)

        allow $1 $2:event send;
        allow vtpmdomu_t $2:event create;
')
########################################
## <summary>
##      Allow vtpmdomu to create an event type
##      through a transition destined for
##      the parameter domain.
## </summary>
## <param name="dst_type">
##      <summary>
##      Type of the destination domain.
##      </summary>
## </param>
## <param name="event_type">
##      <summary>
##      Type of the event vtpmdomu will create.
##      </summary>
## </param>
#
interface(`vtpmdomu_event_src',`
        gen_require(`
                type vtpmdomu_t;
        ')

        create_channel(vtpmdomu_t, $1, $2)

        allow vtpmdomu_t $2:event { status send };
')
########################################
## <summary>
##	Allow specified domain to use vtpm from
##	vtpmdomu.
## </summary>
## <param name="type">
##	<summary>
##	Type of the domain allowed access.
##	</summary>
## </param>
#
interface(`vtpmdomu_map_rw',`
	gen_require(`
		type vtpmdomu_t;
	')

	allow $1 vtpmdomu_t:grant { map_read map_write unmap};
')

